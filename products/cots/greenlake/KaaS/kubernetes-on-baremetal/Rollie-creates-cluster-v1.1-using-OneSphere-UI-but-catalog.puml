
@startuml
actor Rollie

participant "HPE OneSphere UI"
participant Catalog
participant "HPE OneSphere API"
participant K8sLCM
participant "PF9 API"

note over Rollie
    The below sequence talks about usage of HPE OneSphere UI to create cluster,
    which leverages Catalog. Note that catalog workflow being referred here is not same
    as the one we used for cluster deployment in virtualized environment
    (e.g. AWS, VMware). Here, we need admin page and catalog curation to deploy
    cluster (a PaaS component) unlike wordpress (a SaaS Component). Also,
    it needs to provide a mechanism to exercise operations like update, upgrade,
    download kubeconfig, sharing cluster etc. This can be either using
    deep linking UI or part of catalog app UI. The later one does not look
    good as catalog should treat all PaaS component as same as far as
    deployment is concerned and should not be tweaked for specific PaaS
    component. So, deep linking seems better choice.


    Assumptions:

       1) Catalog curation is implemented
       2) HPE UX flow to leverage catalog curation for admin operation (Rollie/Carla here)
          is defined.

    Pre-requisite:

         1) ConnectApp has on-boarded and authorized servers
         2) ConnectApp has creatd pseudo zone representing kubernetes cluster.
         2) New NCS API is defined for cluster creation.

    Pros:

         1) Not dependent on PF9 UI
         2) Unified way of deploying cluster as per HPE OneSphere workflows.
            Actually, we are forced to get unified here because of previous
            implementation of cluster deployment in virtualized world (AWS or
            VMware) as we treated virtualized kubernetes cluster as SaaS.
            In other words, wordpress (SaaS) is different from cluster (PaaS).

    Cons:

        1) More effort
        2) Does not align with PF9 and OpenShift model.
        3) Need deep linking UI to support custom platform operations like
           update, upgrade, download kubeconfig etc. Certainly, we can open
           separate UI screens which does achieves same thing but it does not
           look native part of system (subject to discussion).

end note


Rollie -> "HPE OneSphere UI": Search kubernetes cluster chart
Rollie -> "HPE OneSphere UI": Request cluster creation
"HPE OneSphere UI" -> Catalog: Create cluster
"HPE OneSphere API" -> K8sLCM: Create cluster
K8sLCM -> "PF9 API": Create cluster

note over Rollie
    to be continued...

    After this kuberentes LCM comes into picture and does set of activities
    like deploying marketplace agent, creating storage class etc which is
    same irrespective of mode Rollie choose to create cluster. See follow-up
    of completing post-cluster creation steps in separate sequence diagram.
end note

@enduml