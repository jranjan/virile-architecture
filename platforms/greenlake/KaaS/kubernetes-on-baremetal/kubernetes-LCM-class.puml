@startuml

class APIEntryPoint {
   + httpValidation()
}

class Message

abstract class Pollster
class StatusPollster
Pollster <|-- StatusPollster: extends

note left
    Provides ability to
    replace PF9 deployment
    mechainsm with something
    else tomorrow.
end note

abstract class MessageBroker {
    + drop(Message: message)
    + pick(Message: message)
}

class USGIMessageBroker
MessageBroker <|-- USGIMessageBroker: extends

APIEntryPoint -- KubernetesBaremetalManager : uses
APIEntryPoint -- Request : uses


class ClusterFactory
KubernetesBaremetalManager --> ClusterFactory : asks
ClusterFactory --> Cluster : creates

class PersistentDataFactory
Manager --> PersistentDataFactory : asks
PersistentDataFactory --> PersistentDatabaseEngine : creates

abstract class RequestReceiver {
    + do(Request: request)
}

class HttpRequestReceiver {
    + HttpRequestReceiver(PF9RequestReceiver: thePartnerReceiver, USGIMessageBroker: theBroker)
    - thePartnerReceiver: PF9RequestReceiver
    - theBroker: USGIMessageBroker
}

RequestReceiver <|-- HttpRequestReceiver: extends

class PF9RequestReceiver {
    + PF9RequestReceiver(USGIMessageBroker: theBroker)
    - theBroker: USGIMessageBroker
}

RequestReceiver <|-- PF9RequestReceiver: extends

HttpRequestReceiver -- USGIMessageBroker : uses
HttpRequestReceiver -- PF9RequestReceiver : uses (chain of responsibility)

PF9RequestReceiver -- USGIMessageBroker : uses

class Manager {
    + handle(Request: request)
}

class KubernetesBaremetalManager {
    + KubernetesBaremetalManager(PersistentDatabaseEngine: theDatabaseEngine)
    - theClusters: ArrayList
    - theHttpRequestReceiver: HttpRequestReceiver
    - Manager --> ClusterFactory : asks
    - theDBEngine: PersistentDatabaseEngine
}
Manager <|-- KubernetesBaremetalManager: extends

HttpRequestReceiver -- StatusPollster : uses

KubernetesBaremetalManager -- PersistentDatabaseEngine : uses
KubernetesBaremetalManager O-- HttpRequestReceiver : has

interface PersistentInterface
class PersistentDatabaseEngine
PersistentInterface <|-- PersistentDatabaseEngine: extends

class Request {
    + Request(RequestReceiver: theReceiver)
    + execute()
}

class HttpRequest {
    + HttpRequest(HttpRequestReceiver: theReceiver)
    + prevState: string
    + currentState: string
    + opscode: integer
    + status: string
    + theChildRequest: Request
}

class HttpRequest
Request <|-- HttpRequest: extends
note left
    Request object is likely to
    evolve and get more richer
    in terms of attributes.
end note


Request --> Request : self references

HttpRequest <|-- DownloadScript
HttpRequest <|-- AddNode
HttpRequest <|-- AuthorizeNode
HttpRequest <|-- GetCluster
HttpRequest <|-- CreateCluster
HttpRequest <|-- ActivateCluster
HttpRequest <|-- ScaleupCluster
HttpRequest <|-- ScaledownCluster
HttpRequest <|-- UpgradeCluster
HttpRequest <|-- DeleteCluster
HttpRequest <|-- DonwloadKubeConfig

class PF9Request {
    + PF9Request(PF9RequestReceiver: theReceiver)
}

note left
    A similar set of request needs to be
    supported by partner. In terms of UML
    diagrams:

    PF9Request <|-- DownloadScript
    PF9Request <|-- AddNode
    PF9Request <|-- AuthorizeNode
    PF9Request <|-- GetCluster
    PF9Request <|-- CreateCluster
    PF9Request <|-- ActivateCluster
    PF9Request <|-- ScaleupCluster
    PF9Request <|-- ScaledownCluster
    PF9Request <|-- UpgradeCluster
    PF9Request <|-- DeleteCluster
    PF9Request <|-- DonwloadKubeConfig

    The inheritance trees is not shown
    for simplification here.

end note

Request <|-- PF9Request: extends


class Node
class Zone
abstract class  Cluster
class KubernetesBaremetalCluster {
    + KubernetesBaremetalCluster(Nodes: ArrayList)
    - theNodes: ArrayList
    - zoneID: UUID
}
Cluster <|-- KubernetesBaremetalCluster : inherits attributes


Cluster -- Zone: < owns
Manager o-- Cluster : cluster inventory (memory)
Cluster o-- Node : has node (aggregation)

@enduml
